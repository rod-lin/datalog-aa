/**
 * This file only contains sort and rel declarations and is served for two purposes:
 *   1. as a common header to all datalog dsls
 *   2. as a template to initialize "global" relations in FactGenerator.h
 */

#ifdef IN_DSL
    /**
     * Examples of objects:
     *   - a global
     *   - a function (pointer)
     *   - result of instrAlloca
     *   - the actual memory object of instrAlloca
     */

    sort(Object, 65535);

    /* types */
    rel(object, Object);
    rel(global, Object);
    rel(function, Object);
    rel(block, Object); /* basic block */
    rel(instr, Object);
    rel(mem, Object); /* unamed memory object e.g. result of alloca */

    /* properties */
    rel(immutable, Object);
    rel(nonaddressable, Object);

    /* element relations */
    rel(hasArgument, Object /* function */, Object /* argument */);
    rel(hasBlock, Object /* function */, Object);
    rel(hasInstr, Object /* function object */, Object /* instruction object */);
    rel(hasOperand, Object /* instruction object */, Object /* operand */);

    /* abstract operations (note the order of operands) */
    rel(pointsTo, Object, Object);
    rel(pointsToIndirectly, Object, Object); // transitive-reflexive closure of pointsTo
    rel(copy, Object /* x */, Object /* y */); /* x = y */
    rel(load, Object /* x */, Object /* y */); /* x = *y */
    rel(store, Object /* y */, Object /* x */); /* *x = y */

    /* instructions */
    rel(instrAlloca, Object /* instruction object */, Object /* memory object */);
    rel(instrGetelementptr, Object, Object);
    rel(instrLoad, Object /* load result/instruction */, Object /* pointer object to load */);
    rel(instrStore, Object, Object /* value */, Object /* pointer */);
    rel(instrBitCast, Object, Object);
    rel(instrIntToPtr, Object, Object);
    rel(instrPHI, Object);
    rel(instrRet, Object, Object);
    rel(instrUnknown, Object);
#endif // #ifdef IN_DSL
